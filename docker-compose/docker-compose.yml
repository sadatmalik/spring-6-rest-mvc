# Use root/example as user/password credentials
version: '3.1'

services:

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
      - '3306:3306'
    volumes:
      - my-sql:/var/lib/mysql

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    ports:
      - 5601:5601
    restart: on-failure
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.9
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
    user: root                                                             # Allow access to log files and docker.sock
    restart: on-failure

  spring-6-rest-mvc:
    image: sadatmalik/spring-6-rest-mvc
    restart: on-failure
    depends_on:
      - mysql
    ports:
      - 8081:8081
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  spring-6-gateway:
    image: sadatmalik/spring-6-gateway
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      - spring-6-rest-mvc
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

volumes:
  my-sql:
